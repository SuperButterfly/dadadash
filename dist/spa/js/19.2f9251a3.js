(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[19],{2711:function(e,t,a){"use strict";a.r(t);var l=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("q-page",[a("div",{staticClass:"q-pa-md q-gutter-sm"},[a("q-breadcrumbs",{scopedSlots:e._u([{key:"separator",fn:function(){return[a("q-icon",{attrs:{size:"1.2em",name:"arrow_forward",color:"black"}})]},proxy:!0}])},[a("q-breadcrumbs-el",{attrs:{label:"Database",icon:"fas fa-database"}}),a("q-breadcrumbs-el",{attrs:{label:"Tables",icon:"fas fa-table"}}),a("q-breadcrumbs-el",{attrs:{label:e.$route.params.tableName}})],1)],1),a("div",{staticClass:"row"},[a("div",{staticClass:"col-12 q-pa-md q-gutter-sm"},[e.tableSchema?a("div",[a("table-editor",{attrs:{table:e.tableSchema},on:{deleteRelation:e.deleteTableRelation,deleteColumn:e.deleteTableColumn,deleteTable:e.deleteTable,save:e.saveTable}})],1):e._e()])]),e.showHelp?e._e():a("q-page-sticky",{attrs:{position:"top-right",offset:[0,0]}},[a("q-btn",{attrs:{flat:"",fab:"",icon:"fas fa-question"},on:{click:function(t){e.showHelp=!0}}})],1),a("q-drawer",{attrs:{overlay:"",width:400,side:"right"},model:{value:e.showHelp,callback:function(t){e.showHelp=t},expression:"showHelp"}},[a("q-scroll-area",{staticClass:"fit"},[a("help-page",{on:{closeHelp:function(t){e.showHelp=!1}},scopedSlots:e._u([{key:"help-content",fn:function(){return[a("q-markdown",{attrs:{src:":::warning\nWhen you add a new column to the table, either a set default value or the set the column as nullable\n:::"}})]},proxy:!0}])})],1)],1)],1)},o=[],n=(a("8e6e"),a("8a81"),a("ac6a"),a("cadf"),a("06db"),a("456d"),a("f559"),a("28a5"),a("9523")),r=a.n(n),s=a("2f62");a("a633");function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r()(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var d={name:"CreateTable",methods:i({deleteTableRelation:function(e){console.log("Delete relation",e)},deleteTableColumn:function(e){console.log("Delete column",e);var t=this;this.executeAction({tableName:"world",actionName:"remove_column",params:{world_id:"",column_level:""}}).then((function(e){console.log("Update table",e),setTimeout((function(){t.$q.notify("Updated table structure, refreshing schema"),t.refreshTableSchema(table.TableName).then((function(){t.$q.notify("Schema refreshed"),t.$q.loading.hide()})).catch((function(e){t.$q.notify("Failed to refresh schema "+e),t.$q.loading.hide()}))}),2e3)})).catch((function(e){t.$q.notify("Failed to create "+e),t.$q.loading.hide()}))},deleteTable:function(e){console.log("Delete table",e);var t=this;this.executeAction({tableName:"world",actionName:"remove_table",params:{world_id:t.tableData.reference_id}}).then((function(e){console.log("Deleted table",e),t.$q.notify("Deleted table"),t.$router.push("/tables")})).catch((function(e){t.$q.notify("Failed to delete table: "+JSON.stringify(e)),t.$q.loading.hide(),t.$router.push("/tables")}))},saveTable:function(e){var t=this;if(0!==e.ColumnModel.length){for(var a=0;a<e.ColumnModel.length;a++){var l=e.ColumnModel[a];if(l.ColumnType.indexOf(" - ")>-1){var o=l.ColumnType.split(" - ");l.ColumnType=o[0],l.DataType=o[1],l.ColumnType.startsWith("file.")&&(l.IsForeignKey=!0,l.ForeignKeyData={DataSource:"cloud_store",Namespace:"localstore",KeyName:l.ColumnName}),e.ColumnModel[a]=l}}console.log("Table data",e);var n=e.Relations;this.$q.notify("Updating table structure "+e.TableName),t.$q.loading.show(),this.executeAction({tableName:"world",actionName:"upload_system_schema",params:{schema_file:[{name:"empty.json",file:"data:application/json;base64,"+btoa(JSON.stringify({Tables:[{TableName:e.TableName,Columns:e.ColumnModel}],Relations:n})),type:"application/json"}]}}).then((function(a){console.log("Update table",a),setTimeout((function(){t.$q.notify("Updated table structure, refreshing schema"),t.refreshTableSchema(e.TableName).then((function(){t.$q.notify("Schema refreshed"),t.$q.loading.hide()})).catch((function(e){t.$q.notify("Failed to refresh schema "+e),t.$q.loading.hide()}))}),2e3)})).catch((function(e){t.$q.notify("Failed to create "+e),t.$q.loading.hide()}))}else this.$q.notify("Please add columns")},loadTable:function(){var e=this;e.tableSchema=null;var t=this.$route.params.tableName;console.log("Edit table",t),t?(this.loadData({tableName:"world",params:{query:JSON.stringify([{column:"table_name",operator:"is",value:this.$route.params.tableName}])}}).then((function(t){console.log("Table row",t),t.data&&1===t.data.length?e.tableData=t.data[0]:e.$q.notify({message:"Failed to load table metadata"})})).catch((function(t){e.$q.notify({message:"Failed to load table metadata"})})),this.getTableSchema(t).then((function(t){e.tableSchema=t,console.log("Schema",e.tableSchema)}))):this.setSelectedTable(this.$route.params.tableName)}},Object(s["b"])(["getTableSchema","executeAction","refreshTableSchema","loadData"])),data:function(){return{text:"",showHelp:!1,tableData:null,tableSchema:null}},mounted:function(){this.loadTable()},watch:{},computed:i(i({},Object(s["c"])(["drawerLeft"])),Object(s["d"])([]))},u=d,b=a("2877"),m=a("9989"),h=a("ead5"),f=a("0016"),p=a("079eb"),g=a("de5e"),y=a("9c40"),q=a("9404"),w=a("4983"),T=a("eebe"),v=a.n(T),$=Object(b["a"])(u,l,o,!1,null,null,null);t["default"]=$.exports;v()($,"components",{QPage:m["a"],QBreadcrumbs:h["a"],QIcon:f["a"],QBreadcrumbsEl:p["a"],QPageSticky:g["a"],QBtn:y["a"],QDrawer:q["a"],QScrollArea:w["a"]})}}]);