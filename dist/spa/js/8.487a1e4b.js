(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[8],{"63bb":function(e,a,t){"use strict";var o=t("b7ef"),n=t.n(o);n.a},b7ef:function(e,a,t){},bf3a:function(e,a,t){"use strict";t.r(a);var o=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("q-layout",{staticClass:"user-area-pattern",attrs:{view:"lHh Lpr lFf"}},[t("q-page-container",[t("q-page",[t("div",{staticClass:"row"},[t("div",{staticClass:"col-12"},[t("q-bar",{staticStyle:{height:"50px"},attrs:{dark:""}},[t("q-tabs",{staticClass:"text-black",attrs:{"inline-label":""}},e._l(e.baseConfig.items,(function(a){return"summary"!==a.type?t("q-route-tab",{key:a.reference_id,attrs:{to:"/apps/workspace/"+e.workspaceName+"/"+e.baseName+"/"+a.label,exact:"",replace:""}},[t("span",[t("q-icon",{attrs:{name:e.itemIconMap[a.type]}}),e._v("    ")],1),e._v(e._s(a.label)+"\n                "),t("q-menu",{staticStyle:{"min-width":"300px"},attrs:{"context-menu":""}},[t("q-list",[t("q-item",{attrs:{clickable:"",disable:""}},[t("q-item-section",[t("q-item-label",[e._v("Customise item")])],1)],1),t("q-item",{attrs:{clickable:""},on:{click:function(t){return e.renameBaseItem(a)}}},[t("q-item-section",[t("q-item-label",[e._v("Rename item")])],1)],1),t("q-item",{attrs:{clickable:""},on:{click:function(t){return e.deleteBaseItem(a)}}},[t("q-item-section",[t("q-item-label",[e._v("Delete item")])],1)],1)],1)],1)],1):e._e()})),1),t("q-btn",{staticClass:"text-primary",attrs:{flat:"",id:"newTableButton",icon:"fas fa-plus"}},[t("q-menu",[t("q-list",{staticStyle:{"min-width":"280px"}},[e._l(e.baseItemTypes,(function(a){return t("q-item",{directives:[{name:"close-popup",rawName:"v-close-popup"}],key:a.label,attrs:{disable:a.disabled,clickable:""},on:{click:function(t){return e.addBaseItem(a)}}},[t("q-item-section",[e._v(e._s(a.label))]),t("q-item-section",{attrs:{avatar:""}},[t("q-icon",{attrs:{name:a.icon}})],1)],1)})),t("q-separator")],2)],1)],1)],1)],1),t("q-separator")],1),e.baseLoaded&&e.selectedBaseItem?t("base-view-router",{attrs:{"base-config":e.baseConfig,baseItem:e.selectedBaseItem}}):e._e()],1)],1),t("user-header-bar",{staticStyle:{"border-bottom":"1px solid black"},attrs:{buttons:{before:[],after:[{icon:"fas fa-sync-alt",event:"reload-bases"},{icon:"fas fa-trash",event:"delete-base"}]},onBack:function(){e.$router.push("/apps/workspace/"+e.$route.params.workspaceName)},title:"[Workspace] "+e.$route.params.workspaceName+"&nbsp;&nbsp; › &nbsp;&nbsp;"+e.$route.params.baseName+(e.$route.params.itemName?"&nbsp;&nbsp; › &nbsp;&nbsp;"+e.$route.params.itemName:"")},on:{"delete-base":e.deleteBase,search:e.searchDocuments,"reload-bases":e.refreshBaseData}}),t("q-dialog",{model:{value:e.confirmDeleteBaseMessage,callback:function(a){e.confirmDeleteBaseMessage=a},expression:"confirmDeleteBaseMessage"}},[t("q-card",{staticStyle:{background:"white"}},[t("q-card-section",[t("q-item",[t("q-item-label",[t("span",{staticClass:"text-h4"},[e._v("Delete")])])],1)],1),t("q-card-section",{staticClass:"q-pa-md"},[t("span",[e._v("Are you sure you want to delete all the items in this base ?")])]),t("q-card-actions",{attrs:{align:"right"}},[t("q-btn",{staticClass:"float-right",attrs:{color:"negative",label:"Delete"},on:{click:function(a){return e.deleteBaseConfirm()}}})],1)],1)],1),t("q-dialog",{model:{value:e.showRenameBaseViewModel,callback:function(a){e.showRenameBaseViewModel=a},expression:"showRenameBaseViewModel"}},[t("q-card",{staticStyle:{background:"white","min-width":"400px"}},[t("q-card-section",[t("span",{staticClass:"text-h5"},[e._v("Rename item")])]),t("q-card-section",[t("q-input",{model:{value:e.newName,callback:function(a){e.newName=a},expression:"newName"}})],1),t("q-card-actions",{attrs:{align:"right"}},[t("q-btn",{attrs:{label:"Update",color:"primary"},on:{click:e.renameBaseItem}})],1)],1)],1),t("q-dialog",{model:{value:e.showDeleteConfirmDialog,callback:function(a){e.showDeleteConfirmDialog=a},expression:"showDeleteConfirmDialog"}},[t("q-card",{staticStyle:{background:"white"}},[t("q-card-section",[t("span",{staticClass:"h5"},[e._v("Delete")])]),t("q-card-section",[e._v("\n        Are you sure you want to delete this item\n      ")]),t("q-card-actions",{attrs:{align:"right"}},[t("q-btn",{attrs:{label:"Delete",color:"danger"},on:{click:e.deleteBaseItem}})],1)],1)],1)],1)},n=[],s=(t("8e6e"),t("8a81"),t("456d"),t("f559"),t("7f7f"),t("551c"),t("ac6a"),t("cadf"),t("06db"),t("5df3"),t("9523")),l=t.n(s),i=t("2f62"),r=t("971a"),c=t("ec26");function m(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function d(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?m(Object(t),!0).forEach((function(a){l()(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function b(e){for(var a="",t="abcdefghijklmnopqrstuvwxyz",o=t.length,n=0;n<e;n++)a+=t.charAt(Math.floor(Math.random()*o));return a}window.XLSX=XLSX;var u={table:{attributes:{TableName:"New table",Columns:[{Name:"name",ColumnType:"label"}]}}},p={name:"BaseData",components:{BaseViewRouter:r["default"]},meta:function(){return{title:"["+this.$route.params.baseName+"] "+this.$route.params.itemName+" - "+this.$route.params.workspaceName}},methods:d(d({deleteBaseItem:function(e){if(console.log("Delete base item",e,this.itemBeingEdited),!this.showDeleteConfirmDialog)return this.showDeleteConfirmDialog=!0,void(this.itemBeingEdited=e);this.showDeleteConfirmDialog=!1;var a=this;a.deleteRow({tableName:"document",reference_id:a.itemBeingEdited.reference_id}).then((function(e){a.$q.notify({message:"Item deleted"}),delete a.baseItemMap[a.itemBeingEdited.label];for(var t=-1,o=0;o<a.baseConfig.items.length;o++)if(a.baseConfig.items[o].label===a.itemBeingEdited.label){t=o;break}console.log("Item to remove from base config",t),t>-1&&a.baseConfig.items.splice(t,1)}))},renameBaseItem:function(e){var a=this;if(console.log("Rename base item",this.itemBeingEdited),!0!==this.showRenameBaseViewModel)return this.itemBeingEdited=e,this.newName=this.itemBeingEdited.label,void(this.showRenameBaseViewModel=!0);if(console.log("Updated name",this.newName),this.newName!==this.itemBeingEdited.label){console.log("Update item");var t=this.itemBeingEdited.label;this.itemBeingEdited.label=this.newName,a.updateRow({tableName:"document",id:a.itemBeingEdited.reference_id,document_name:a.newName}).then((function(e){console.log("Updated item name",e),a.baseItemMap[a.newName]=a.baseItemMap[t],delete a.baseItemMap[t],t===a.selectedItem&&a.$router.push("/apps/workspace/"+a.workspaceName+"/"+a.baseName+"/"+a.newName)})).catch((function(e){console.log("Failed to update item name",e)}))}this.showRenameBaseViewModel=!1},addBaseItem:function(e){var a=this;console.log("Add new item to base",e);var t={type:e.type,label:"New "+e.type};u[e.type]&&(t=u[e.type],t.type=e.type,t.label="New "+e.type);var o=null;o={document_name:"New "+e.type,tableName:"document",document_extension:e.type,mime_type:"workspace/"+e.type,document_path:"/"+a.workspaceName+"/"+a.baseName,document_content:[{name:e.type+"-"+Object(c["a"])()+".json",type:"workspace/"+e.type,path:"/"+a.workspaceName+"/"+a.baseName,contents:"workspace/"+e.type+","+btoa(JSON.stringify(e))}]},console.log("Create base request",o),a.createRow(o).then((function(e){console.log("New workspace item created",e),t.reference_id=e.data.reference_id,a.baseConfig.items.push(t),a.baseItemMap[t.label]=e.data})).catch((function(e){a.$q.notify({message:"Failed to create new item - "+JSON.stringify(e)})}))},deleteBaseConfirm:function(){console.log("Delete base",this.baseName);var e=this;e.confirmDeleteBaseMessage=!1,e.loadData({tableName:"document",params:{query:JSON.stringify([{column:"document_path",operator:"is",value:"/"+e.workspaceName+"/"+e.baseName}]),page:{size:100}}}).then((function(a){console.log("base items to be deleted",a);for(var t=[],o=0;o<a.data.length;o++){var n=a.data[o];console.log("Delete item",n),t.push(e.deleteRow({tableName:"document",reference_id:n.id}))}for(o=0;o<e.baseConfig.items.length;o++){n=e.baseConfig.items[o];"table"===n.type&&console.log("target table details,",n)}Promise.all(t).then((function(a){console.log("All child item deleted",a,"delete base",e.baseRow),e.deleteRow({tableName:"document",reference_id:e.baseRow.id}).then((function(a){console.log("Base deleted"),e.$router.push("/apps/workspace/"+e.workspaceName)})).catch((function(a){console.log("Failed to delete base",a),e.$q.notify({message:"Failed to delete base please try again later"})}))})).catch((function(e){console.log("Failed to delete a child item",e)}))}))},deleteBase:function(){console.log("Delete base",this.baseName);var e=this;e.confirmDeleteBaseMessage=!0},searchDocuments:function(e){console.log("search data",arguments),this.searchQuery=e,this.refreshData()},showUploadData:function(){}},Object(i["b"])(["loadData","getTableSchema","updateRow","createRow","deleteRow","executeAction","loadModel"])),{},{refreshBaseData:function(){var e=this;return e.baseItemMap={},new Promise((function(a,t){var o=e.$route.params.workspaceName,n=e.$route.params.baseName;e.selectedItem=e.$route.params.itemName,e.baseName=n,e.baseConfig={name:n},e.workspaceName=o,e.$q.notify({message:"Refreshing base"});var s={tableName:"document",params:{query:JSON.stringify([{column:"document_path",operator:"is",value:"/"+o},{column:"mime_type",operator:"is",value:"workspace/base"},{column:"document_name",operator:"is",value:n}]),page:{size:1},included_relations:"document_content"}};e.files=[],console.log("Query base content document"),e.loadData(s).then((function(l){console.log("loaded base document",l);var i=l.data[0];if(i.document_content){e.baseRow=i;var r=i.document_content[0].contents;e.baseConfig=JSON.parse(atob(r)),e.baseConfig.name=e.baseName,console.log("selected base item 1",e.selectedItem,e.baseConfig,e.baseItemMap,e.selectedBaseItem),s={tableName:"document",params:{query:JSON.stringify([{column:"document_path",operator:"is",value:"/"+o+"/"+n},{column:"mime_type",operator:"like",value:"workspace/%"}]),page:{size:100},included_relations:"document_content"}},e.baseConfig.items=[],e.loadData(s).then((function(o){console.log("loaded base item documents",o);for(var n=0;n<o.data.length;n++)try{var s=o.data[n],l=JSON.parse(atob(s.document_content[0].contents));l.type=s.document_extension,l.label=s.document_name,l.reference_id=s.reference_id,e.baseItemMap[s.document_name]=s,e.baseConfig.items.push(l)}catch(i){console.log("failed to parse item data",i)}e.selectedBaseItem=e.baseItemMap[e.selectedItem],e.ensureBaseTables().then((function(){a()})).catch(t)}))}else alert("Base configuration is empty - "+i)}))}))},ensureBaseTables:function(){var e=this;console.log("Ensure base tables",this.baseConfig);for(var a=[],t={Tables:[]},o=0;o<e.baseConfig.items.length;o++){var n=e.baseConfig.items[o];if("table"===n.type){console.log("Table item",n,n.targetTable);var s=n.targetTable;if(!s){var l=n.attributes;l.TableName="tab_"+b(7);for(var i=0;i<l.Columns.length;i++){var r=l.Columns[i];r.ColumnType.startsWith("file.")&&(r.DataType="blob",r.IsForeignKey=!0,r.ForeignKeyData={DataSource:"cloud_store",Namespace:"localstore",KeyName:r.ColumnName})}console.log("No target table exists for this item, creating one",n.label,l.TableName),t.Tables.push(l),n.targetTable=l,e.baseItemMap[n.label].document_content[0].contents=btoa(JSON.stringify(n)),console.log("Update base request",e.baseItemMap[n.label]),e.baseItemMap[n.label].tableName="document",a.push(e.updateRow(e.baseItemMap[n.label]))}}}return new Promise((function(o,n){Promise.all(a).then((function(){t.Tables.length>0?(e.$q.loadingBar.start(),e.$q.notify({message:"Creating "+t.Tables.length+" tables"}),e.executeAction({tableName:"world",actionName:"upload_system_schema",params:{schema_file:[{contents:"application/json,"+btoa(JSON.stringify(t)),name:e.baseName+".json"}]}}).then((function(a){console.log("Tables created",a),e.$q.notify({message:"Base tables created, please wait while we generate random data to begin"}),e.$q.loadingBar.stop(),e.$q.loadingBar.start(5),console.log("Try to create random data for the new base"),e.$q.notify({message:"Generating random data for "+t.Tables.length+" tables"});var n=[];n=t.Tables.map((function(a){return console.log("Create random data for ",a.TableName),new Promise((function(o,n){var s=function n(){setTimeout((function(){e.executeAction({tableName:"world",actionName:"generate_random_data",params:{table_name:a.TableName,count:10}}).then((function(s){if(console.log("Generate random data response",s),!s||""===s)return console.log("data generate failed, try again",s),e.$q.loadingBar.increment(1e3/t.Tables.length),void n();e.$q.loadingBar.increment(100/t.Tables.length),console.log("Random data generated for table",a.TableName),o()})).catch((function(e){n(),console.log("Failed to generate random data for ",a.TableName,e)}))}),5e3)};s()}))})),Promise.all(n).then((function(){e.$q.loadingBar.stop(),o()})).catch((function(e){console.log("Failed to create random data",e)}))})).catch((function(a){console.log("Failed to create table",a),e.$q.notify({message:"Failed to create tables for the base"}),n()}))):o()}))}))},refreshData:function(){var e=this;return e.newRowData=[],e.sourceMap={},console.log("Refresh daata, update the selected item",e.selectedItem,e.baseItemMap),console.log("Updated base ",e.selectedItem,e.baseName,e.selectedBaseItem),e.selectedItem=e.$route.params.itemName,e.baseName=e.$route.params.baseName,e.selectedBaseItem=e.baseItemMap[e.selectedItem],e.baseLoaded=!0,Promise.resolve()}}),props:["baseConfiguration"],data:function(){return{baseItemMap:{},showRenameBaseViewModel:!1,showDeleteConfirmDialog:!1,itemBeingEdited:null,newName:null,baseLoaded:!1,dataUploadFile:null,selectedBaseItem:null,baseItemTypes:{table:{label:"Data table",type:"table",icon:"fas fa-table"},view:{label:"View",type:"view",icon:"fas fa-eye"},spreadsheet:{label:"Spreadsheet",type:"spreadsheet",icon:"table_view"},document:{label:"Document",type:"document",icon:"fas fa-file-alt"},folder:{label:"Folder",type:"folder",icon:"folder_open"},calendar:{label:"Calendar",type:"calendar",icon:"fas fa-table"},mailbox:{label:"Mailbox",type:"mailbox",icon:"all_inbox",disabled:!0}},itemIconMap:{table:"fas fa-table",view:"fas fa-eye",spreadsheet:"table_view",document:"fas fa-file-alt",folder:"folder_open",calendar:"calendar_today",mailbox:"all_inbox"},baseRow:null,confirmDeleteBaseMessage:!1,searchQuery:null,baseConfig:{items:[]},workspaceDocument:null,selectedItem:null,workspaceName:null,baseName:null,itemName:null,tablePermissionDrawer:!1,currentPage:1,tabulatorOptions:{headerFilter:!1},currentPagination:{},defaultColumns:["updated_at","created_at","reference_id","permission"],tableSchema:{ColumnModel:[]},rows:[],tableData:null,newRowDrawer:!1,newRowData:[],selectedRows:[]}},computed:d({},Object(i["c"])(["endpoint","authToken","tables"])),updated:function(){},mounted:function(){var e=this;this.refreshBaseData().then((function(){console.log("base load complete return"),e.refreshData()})).catch((function(e){console.log("Failed to complete base data refresh",e)}))},watch:{"$route.params.baseName":function(){var e=this;e.baseLoaded=!1,console.log("base name changed",arguments),this.refreshData()},"$route.params.itemName":function(){var e=this;e.baseLoaded=!1,console.log("item name changed",arguments),this.refreshData()}}},f=p,g=(t("63bb"),t("2877")),h=t("4d5a"),w=t("09e3"),y=t("9989"),N=t("d847"),v=t("429b"),_=t("7867"),q=t("0016"),B=t("4e73"),D=t("1c1c"),C=t("66e5"),k=t("4074"),I=t("0170"),M=t("9c40"),T=t("eb85"),$=t("24e8"),R=t("f09f"),O=t("a370"),x=t("4b7e"),S=t("27f9"),Q=t("7f67"),P=t("eebe"),j=t.n(P),E=Object(g["a"])(f,o,n,!1,null,"27ba511d",null);a["default"]=E.exports;j()(E,"components",{QLayout:h["a"],QPageContainer:w["a"],QPage:y["a"],QBar:N["a"],QTabs:v["a"],QRouteTab:_["a"],QIcon:q["a"],QMenu:B["a"],QList:D["a"],QItem:C["a"],QItemSection:k["a"],QItemLabel:I["a"],QBtn:M["a"],QSeparator:T["a"],QDialog:$["a"],QCard:R["a"],QCardSection:O["a"],QCardActions:x["a"],QInput:S["a"]}),j()(E,"directives",{ClosePopup:Q["a"]})}}]);