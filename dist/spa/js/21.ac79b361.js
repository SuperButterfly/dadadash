(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[21],{2711:function(e,a,t){"use strict";t.r(a);var l=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",[t("q-page-container",[t("q-page",[t("div",{staticClass:"q-pa-md q-gutter-sm"},[t("q-breadcrumbs",{scopedSlots:e._u([{key:"separator",fn:function(){return[t("q-icon",{attrs:{size:"1.2em",name:"arrow_forward",color:"black"}})]},proxy:!0}])},[t("q-breadcrumbs-el",{attrs:{label:"Database",icon:"fas fa-database"}}),t("q-breadcrumbs-el",{attrs:{label:"Tables",icon:"fas fa-table"}}),t("q-breadcrumbs-el",{attrs:{label:e.$route.params.tableName}})],1)],1),t("div",{staticClass:"row"},[t("div",{staticClass:"col-12 q-pa-md q-gutter-sm"},[e.tableSchema?t("div",[t("table-editor",{attrs:{table:e.tableSchema},on:{deleteRelation:e.deleteTableRelation,deleteColumn:e.deleteTableColumn,deleteTable:e.deleteTable,save:e.saveTable}})],1):e._e()])]),t("q-drawer",{attrs:{overlay:"",width:400,side:"right"},model:{value:e.showHelp,callback:function(a){e.showHelp=a},expression:"showHelp"}},[t("q-scroll-area",{staticClass:"fit"},[t("help-page",{on:{closeHelp:function(a){e.showHelp=!1}},scopedSlots:e._u([{key:"help-content",fn:function(){return[t("q-markdown",{attrs:{src:":::warning\nWhen you add a new column to the table, either a set default value or the set the column as nullable\n:::"}})]},proxy:!0}])})],1)],1)],1)],1)],1)},o=[],n=(t("8e6e"),t("8a81"),t("ac6a"),t("cadf"),t("06db"),t("456d"),t("f559"),t("28a5"),t("9523")),r=t.n(n),c=t("2f62");t("a633");function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r()(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var d={name:"CreateTable",methods:s({deleteTableRelation:function(e){console.log("Delete relation",e)},deleteTableColumn:function(e){console.log("Delete column",e);var a=this;this.executeAction({tableName:"world",actionName:"remove_column",params:{world_id:"",column_level:""}}).then((function(e){console.log("Update table",e),setTimeout((function(){a.$q.notify("Updated table structure, refreshing schema"),a.refreshTableSchema(table.TableName).then((function(){a.$q.notify("Schema refreshed"),a.$q.loading.hide()})).catch((function(e){a.$q.notify("Failed to refresh schema "+e),a.$q.loading.hide()}))}),2e3)})).catch((function(e){a.$q.notify("Failed to create "+e),a.$q.loading.hide()}))},deleteTable:function(e){console.log("Delete table",e);var a=this;this.executeAction({tableName:"world",actionName:"remove_table",params:{world_id:a.tableData.reference_id}}).then((function(e){console.log("Deleted table",e),a.$q.notify("Deleted table"),a.$router.push("/tables")})).catch((function(e){a.$q.notify("Failed to delete table: "+JSON.stringify(e)),a.$q.loading.hide(),a.$router.push("/tables")}))},saveTable:function(e){var a=this;if(0!==e.ColumnModel.length){for(var t=0;t<e.ColumnModel.length;t++){var l=e.ColumnModel[t];if(l.ColumnType.indexOf(" - ")>-1){var o=l.ColumnType.split(" - ");l.ColumnType=o[0],l.DataType=o[1],l.ColumnType.startsWith("file.")&&(l.IsForeignKey=!0,l.ForeignKeyData={DataSource:"cloud_store",Namespace:"localstore",KeyName:l.ColumnName}),e.ColumnModel[t]=l}}console.log("Table data",e);var n=e.Relations;this.$q.notify("Updating table structure "+e.TableName),a.$q.loading.show(),this.executeAction({tableName:"world",actionName:"upload_system_schema",params:{schema_file:[{name:"empty.json",file:"data:application/json;base64,"+btoa(JSON.stringify({Tables:[{TableName:e.TableName,Columns:e.ColumnModel}],Relations:n})),type:"application/json"}]}}).then((function(t){console.log("Update table",t),setTimeout((function(){a.$q.notify("Updated table structure, refreshing schema"),a.refreshTableSchema(e.TableName).then((function(){a.$q.notify("Schema refreshed"),a.$q.loading.hide()})).catch((function(e){a.$q.notify("Failed to refresh schema "+e),a.$q.loading.hide()}))}),2e3)})).catch((function(e){a.$q.notify("Failed to create "+e),a.$q.loading.hide()}))}else this.$q.notify("Please add columns")},loadTable:function(){var e=this;e.tableSchema=null;var a=this.$route.params.tableName;console.log("Edit table",a),a?(this.loadData({tableName:"world",params:{query:JSON.stringify([{column:"table_name",operator:"is",value:this.$route.params.tableName}])}}).then((function(a){console.log("Table row",a),a.data&&1===a.data.length?e.tableData=a.data[0]:e.$q.notify({message:"Failed to load table metadata"})})).catch((function(a){e.$q.notify({message:"Failed to load table metadata"})})),this.getTableSchema(a).then((function(a){e.tableSchema=a,console.log("Schema",e.tableSchema)}))):this.setSelectedTable(this.$route.params.tableName)}},Object(c["b"])(["getTableSchema","executeAction","refreshTableSchema","loadData"])),data:function(){return{text:"",showHelp:!1,tableData:null,tableSchema:null}},mounted:function(){this.loadTable()},watch:{},computed:s(s({},Object(c["c"])(["drawerLeft"])),Object(c["d"])([]))},u=d,b=t("2877"),m=t("09e3"),h=t("9989"),f=t("ead5"),p=t("0016"),g=t("079eb"),y=t("9404"),q=t("4983"),w=t("eebe"),T=t.n(w),v=Object(b["a"])(u,l,o,!1,null,null,null);a["default"]=v.exports;T()(v,"components",{QPageContainer:m["a"],QPage:h["a"],QBreadcrumbs:f["a"],QIcon:p["a"],QBreadcrumbsEl:g["a"],QDrawer:y["a"],QScrollArea:q["a"]})}}]);